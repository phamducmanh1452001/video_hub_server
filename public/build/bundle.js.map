{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Router.svelte","../../node_modules/svelte-routing/src/Route.svelte","../../node_modules/svelte-routing/src/actions.js","../../src/widgets/Header.svelte","../../src/widgets/Footer.svelte","../../src/pages/HomePage.svelte","../../src/widgets/FluidPlayer.svelte","../../src/widgets/SmartPlayer.svelte","../../src/pages/VideoPlayerPage.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const LOCATION = {};\nexport const ROUTER = {};\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    state: source.history.state,\n    key: (source.history.state && source.history.state.key) || \"initial\"\n  };\n}\n\nfunction createHistory(source, options) {\n  const listeners = [];\n  let location = getLocation(source);\n\n  return {\n    get location() {\n      return location;\n    },\n\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        listener({ location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return () => {\n        source.removeEventListener(\"popstate\", popstateListener);\n\n        const index = listeners.indexOf(listener);\n        listeners.splice(index, 1);\n      };\n    },\n\n    navigate(to, { state, replace = false } = {}) {\n      state = { ...state, key: Date.now() + \"\" };\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      listeners.forEach(listener => listener({ location, action: \"PUSH\" }));\n    }\n  };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  const stack = [{ pathname: initialPathname, search: \"\" }];\n  const states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener(name, fn) {},\n    removeEventListener(name, fn) {},\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        index++;\n        stack.push({ pathname, search });\n        states.push(state);\n      },\n      replaceState(state, _, uri) {\n        const [pathname, search = \"\"] = uri.split(\"?\");\n        stack[index] = { pathname, search };\n        states[index] = state;\n      }\n    }\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = Boolean(\n  typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n);\nconst globalHistory = createHistory(canUseDOM ? window : createMemorySource());\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n * */\n\nconst paramRe = /^:(.+)/;\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport function startsWith(string, search) {\n  return string.substr(0, search.length) === search;\n}\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isRootSegment(segment) {\n  return segment === \"\";\n}\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nfunction isDynamic(segment) {\n  return paramRe.test(segment);\n}\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nfunction isSplat(segment) {\n  return segment[0] === \"*\";\n}\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nfunction segmentize(uri) {\n  return (\n    uri\n      // Strip starting/ending `/`\n      .replace(/(^\\/+|\\/+$)/g, \"\")\n      .split(\"/\")\n  );\n}\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nfunction stripSlashes(str) {\n  return str.replace(/(^\\/+|\\/+$)/g, \"\");\n}\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nfunction rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.path).reduce((score, segment) => {\n        score += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          score += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          score += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          score -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          score += STATIC_POINTS;\n        }\n\n        return score;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nfunction rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) =>\n        a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n      )\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nfunction pick(routes, uri) {\n  let match;\n  let default_;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const route = ranked[i].route;\n    let missed = false;\n\n    if (route.default) {\n      default_ = {\n        route,\n        params: {},\n        uri\n      };\n      continue;\n    }\n\n    const routeSegments = segmentize(route.path);\n    const params = {};\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (routeSegment !== undefined && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (uriSegment === undefined) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      let dynamicMatch = paramRe.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      match = {\n        route,\n        params,\n        uri: \"/\" + uriSegments.slice(0, index).join(\"/\")\n      };\n      break;\n    }\n  }\n\n  return match || default_ || null;\n}\n\n/**\n * Check if the `path` matches the `uri`.\n * @param {string} path\n * @param {string} uri\n * @return {?object}\n */\nfunction match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nfunction addQuery(pathname, query) {\n  return pathname + (query ? `?${query}` : \"\");\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nfunction resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n}\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nfunction combinePaths(basepath, path) {\n  return `${stripSlashes(\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n  )}/`;\n}\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nfunction shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nfunction hostMatches(anchor) {\n  const host = location.host\n  return (\n    anchor.host == host ||\n    // svelte seems to kill anchor.host value in ie11, so fall back to checking href\n    anchor.href.indexOf(`https://${host}`) === 0 ||\n    anchor.href.indexOf(`http://${host}`) === 0\n  )\n}\n\nexport { stripSlashes, pick, match, resolve, combinePaths, shouldNavigate, hostMatches };\n","<script>\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts.js\";\n  import { globalHistory } from \"./history.js\";\n  import { pick, match, stripSlashes, combinePaths } from \"./utils.js\";\n\n  export let basepath = \"/\";\n  export let url = null;\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n  // If locationContext is not set, this is the topmost Router in the tree.\n  // If the `url` prop is given we force the location to it.\n  const location =\n    locationContext ||\n    writable(url ? { pathname: url } : globalHistory.location);\n\n  // If routerContext is set, the routerBase of the parent Router\n  // will be the base for this Router's descendants.\n  // If routerContext is not set, the path and resolved uri will both\n  // have the value of the basepath prop.\n  const base = routerContext\n    ? routerContext.routerBase\n    : writable({\n        path: basepath,\n        uri: basepath\n      });\n\n  const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n    // If there is no activeRoute, the routerBase will be identical to the base.\n    if (activeRoute === null) {\n      return base;\n    }\n\n    const { path: basepath } = base;\n    const { route, uri } = activeRoute;\n    // Remove the potential /* or /*splatname from\n    // the end of the child Routes relative paths.\n    const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n\n    return { path, uri };\n  });\n\n  function registerRoute(route) {\n    const { path: basepath } = $base;\n    let { path } = route;\n\n    // We store the original path in the _path property so we can reuse\n    // it when the basepath changes. The only thing that matters is that\n    // the route reference is intact, so mutation is fine.\n    route._path = path;\n    route.path = combinePaths(basepath, path);\n\n    if (typeof window === \"undefined\") {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        activeRoute.set(matchingRoute);\n        hasActiveRoute = true;\n      }\n    } else {\n      routes.update(rs => {\n        rs.push(route);\n        return rs;\n      });\n    }\n  }\n\n  function unregisterRoute(route) {\n    routes.update(rs => {\n      const index = rs.indexOf(route);\n      rs.splice(index, 1);\n      return rs;\n    });\n  }\n\n  // This reactive statement will update all the Routes' path when\n  // the basepath changes.\n  $: {\n    const { path: basepath } = $base;\n    routes.update(rs => {\n      rs.forEach(r => (r.path = combinePaths(basepath, r._path)));\n      return rs;\n    });\n  }\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  if (!locationContext) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = globalHistory.listen(history => {\n        location.set(history.location);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    base,\n    routerBase,\n    registerRoute,\n    unregisterRoute\n  });\n</script>\n\n<slot></slot>\n","<script>\n  import { getContext, onDestroy } from \"svelte\";\n  import { ROUTER, LOCATION } from \"./contexts.js\";\n\n  export let path = \"\";\n  export let component = null;\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const location = getContext(LOCATION);\n\n  const route = {\n    path,\n    // If no path prop is given, this Route will act as the default Route\n    // that is rendered if no other Route in the Router is a match.\n    default: path === \"\"\n  };\n  let routeParams = {};\n  let routeProps = {};\n\n  $: if ($activeRoute && $activeRoute.route === route) {\n    routeParams = $activeRoute.params;\n  }\n\n  $: {\n    const { path, component, ...rest } = $$props;\n    routeProps = rest;\n  }\n\n  registerRoute(route);\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway.\n  if (typeof window !== \"undefined\") {\n    onDestroy(() => {\n      unregisterRoute(route);\n    });\n  }\n</script>\n\n{#if $activeRoute !== null && $activeRoute.route === route}\n  {#if component !== null}\n    <svelte:component this=\"{component}\" location={$location} {...routeParams} {...routeProps}  />\n  {:else}\n    <slot params=\"{routeParams}\" location={$location}></slot>\n  {/if}\n{/if}\n","import { navigate } from \"./history.js\";\nimport { shouldNavigate, hostMatches } from \"./utils.js\";\n\n/**\n * A link action that can be added to <a href=\"\"> tags rather\n * than using the <Link> component.\n *\n * Example:\n * ```html\n * <a href=\"/post/{postId}\" use:link>{post.title}</a>\n * ```\n */\nfunction link(node) {\n  function onClick(event) {\n    const anchor = event.currentTarget;\n\n    if (\n      anchor.target === \"\" &&\n      hostMatches(anchor) &&\n      shouldNavigate(event)\n    ) {\n      event.preventDefault();\n      navigate(anchor.pathname + anchor.search, { replace: anchor.hasAttribute(\"replace\") });\n    }\n  }\n\n  node.addEventListener(\"click\", onClick);\n\n  return {\n    destroy() {\n      node.removeEventListener(\"click\", onClick);\n    }\n  };\n}\n\n/**\n * An action to be added at a root element of your application to\n * capture all relative links and push them onto the history stack.\n *\n * Example:\n * ```html\n * <div use:links>\n *   <Router>\n *     <Route path=\"/\" component={Home} />\n *     <Route path=\"/p/:projectId/:docId?\" component={ProjectScreen} />\n *     {#each projects as project}\n *       <a href=\"/p/{project.id}\">{project.title}</a>\n *     {/each}\n *   </Router>\n * </div>\n * ```\n */\nfunction links(node) {\n  function findClosest(tagName, el) {\n    while (el && el.tagName !== tagName) {\n      el = el.parentNode;\n    }\n    return el;\n  }\n\n  function onClick(event) {\n    const anchor = findClosest(\"A\", event.target);\n\n    if (\n      anchor &&\n      anchor.target === \"\" &&\n      hostMatches(anchor) &&\n      shouldNavigate(event) &&\n      !anchor.hasAttribute(\"noroute\")\n    ) {\n      event.preventDefault();\n      navigate(anchor.pathname + anchor.search, { replace: anchor.hasAttribute(\"replace\") });\n    }\n  }\n\n  node.addEventListener(\"click\", onClick);\n\n  return {\n    destroy() {\n      node.removeEventListener(\"click\", onClick);\n    }\n  };\n}\n\nexport { link, links };\n","<script>\n  export let isUav = window.location.href.includes('/uav');\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</svelte:head>\n\n<main>\n  <div class=\"topnav\">\n    <a href=\"/\">\n      <img id=\"logo\" src=\"/logo.png\" alt=\"UJAV\"/>\n    </a>\n    <a href=\"/jav\" class=\"option\" style=\"color: {isUav ? '' : '#f48f51'}\">&nbsp;JAV&nbsp;</a>\n    <a href=\"/uav\" class=\"option\" style=\"color: {isUav ? '#f48f51' : ''}\">&nbsp;UAV&nbsp;</a>\n    <div class=\"search-container\">\n        <form action=\"/{isUav ? 'uav' : 'jav'}/page/1\">\n        <input type=\"text\" placeholder=\"Search...\" name=\"search\">\n          <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n        </form>\n    </div>\n  </div>\n</main>\n\n<style>\n* {box-sizing: border-box;}\n\n:global(body) {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n#logo {\n  height: 60px;\n}\n\n.option {\n  margin-top: 20px;\n}\n\n.topnav {\n  overflow: hidden;\n  background-color: #333;\n  margin-bottom: 40px;\n}\n\n.topnav a {\n  float: left;\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 16px;\n\n  text-decoration: none;\n  font-size: 17px;\n  font-weight: bold;\n}\n\n.topnav a:hover {\n  background-color: #343334;\n  color: grey;\n}\n\n.topnav .search-container {\n  margin-top: 18px;\n  float: right;\n}\n\n.topnav input[type=text] {\n  line-height: 28px;\n  padding: 6px;\n  margin-top: 8px;\n  font-size: 17px;\n  border: none;\n}\n\n.topnav .search-container button {\n  float: right;\n  height: 40px;\n  width: 40px;\n  margin-top: 8px;\n  margin-top: 8px;\n  margin-right: 16px;\n  color: white;\n  background: #f48f51;;\n  font-size: 18px;\n  border: none;\n  cursor: pointer;\n}\n\n.topnav .search-container button:hover {\n  background: orange;\n}\n\n@media screen and (max-width: 600px) {\n  .topnav .search-container {\n    float: none;\n  }\n\n  .topnav a, .topnav input[type=text], .topnav .search-container button {\n    float: none;\n    display: block;\n    text-align: left;\n    width: 100%;\n    padding-left: 12px;\n    margin: 0;\n  }\n\n  .topnav input[type=text] {\n    border: 1px solid #ccc;  \n  }\n}\n</style>","<script>\n\n</script>\n\n<main>\n    <div id=\"contact\">\n        <h4>Telegram: <a href=\"https://t.me/+b26KKnyfTuxmOGE9\">https://t.me/+b26KKnyfTuxmOGE9</a></h4>\n        <ul>\n            <li><p>Chúng ta có thể phàn nàn vì bụi hồng có gai, hoặc vui mừng vì gai có hoa hồng – Alphonse Karr</p></li>\n            <li><p>Bắt đầu mỗi ngày với một suy nghĩ tích cực và một trái tim biết ơn – Roy T. Bennett</p></li>\n            <li><p>Dũng cảm không phải là không sợ hãi: nó là khả năng hành động khi bạn sợ hãi – Bruce Lee</p></li>\n            <li><p>Mỗi vị thánh đều có một quá khứ, và mỗi tội nhân đều có một tương lai – Oscar Wilde</p></li>\n        </ul>\n    </div>\n</main>\n\n<style>\n    #contact {\n        margin-top: 40px;\n        padding-bottom: 20px;\n        margin-left: 24px;\n        margin-right: 24px;\n        border-top: 1px solid #333333;\n        color: #c4c4c4;\n    }\n</style>\n","<script>\n    import Header from \"../widgets/Header.svelte\";\n    import Footer from \"../widgets/Footer.svelte\";\n\n    import { link } from \"svelte-routing\";\n    export let id = 1;\n    const baseUrl = 'http://103.82.21.73:80';\n    const urlParams = new URLSearchParams(window.location.search);\n    const isUav = window.location.href.includes('/uav');\n    \n    const paramsByPage = (page) => {\n      let params;\n      if (isUav) {\n        params = `/uav/page/${page}`;\n      } else {\n        params = `/jav/page/${page}`;\n      }\n      if (urlParams.has('search')) {\n        params += `?search=${urlParams.get('search')}`;\n      }\n      return params;\n    }\n\n    const params = paramsByPage(id);\n    let videos = [];\n    let maxPage = 0;\n    const calcPage = (page) => {\n      return page > maxPage ? (page % maxPage) : page;\n    }\n\n    const request = new XMLHttpRequest();\n    const currentPage = id;\n\n    let length = 6;\n    const startPage = currentPage - (currentPage % length) + 1;;\n    let pages = [];\n\n    request.onload = () => {\n        const response = JSON.parse(request.response);\n        videos = response.data;\n        maxPage = response.max_page;\n        length = Math.min(length, maxPage);\n        pages = Array.from({length: length}, (_, i) => startPage + i);\n        if (maxPage < id) {\n          window.location.href = `${baseUrl}/${paramsByPage(maxPage)}`;\n        }\n    };\n    request.open('GET', `${baseUrl}/api${params}`, true);\n    request.setRequestHeader('Content-type', 'application/json');\n    request.send();\n</script>\n\n<main>\n  <Header/>\n\n  <div id=\"wrapper-grid\"\n    style=\"{isUav ? 'grid-template-columns: repeat(auto-fit, 12rem)' : ''}\">\n    {#each videos as video}\n      <a href=\"/play/{video.code}\" use:link>\n        <div class=\"container\">\n          <!-- svelte-ignore a11y-img-redundant-alt -->\n          <img id=\"actorImage\" src={video.icon_link} alt='profile image'\n            style=\"{isUav ? 'height: 7rem': ''}\" \n          />\n          <p1 class=\"title\">{isUav ? video.title : video.title.split(' ')[0]}</p1>\n          <br/>\n          {#if video.actor != undefined}\n            <p2 id=\"actorName\">{video.actor}</p2>\n          {/if}\n        </div>\n      </a>\n    {/each}\n  </div>\n  \n  <!-- paging tag -->\n  {#if videos.length != 0}\n    <div class=\"pagination\">\n      <a href=\"{baseUrl}{paramsByPage(startPage-length < 0 ? maxPage-length+1 : startPage-length)}\">&laquo;</a>\n      {#each pages as page}\n        <a href=\"{baseUrl}{paramsByPage(calcPage(page))}\" class:active={page == currentPage}\n          class:small-text={page > 100}>{calcPage(page)}</a>\n      {/each}\n      <a href=\"{baseUrl}{paramsByPage(startPage+length > maxPage ? 1 : startPage+length)}\">&raquo;</a>\n    </div>\n  {/if}\n\n  <Footer/>\n</main>\n\n\n<style>\n:global(body) {\n  background-color: #222123;\n}\n\na:hover {\n  text-decoration: none;\n}\n\n.container {\n  overflow: hidden;\n  text-align: center;\n\n  position: relative;\n  margin: 0.5rem;\n}\n\n#actorImage {\n  box-shadow: -2px 2px 6px black;\n\n  height: 10rem;\n  background-position: center;\n  background-size: cover;\n}\n\n#actorName {\n  font-weight: normal;\n  font-size: 0.8rem;\n  color: #dddddd;\n}\n\n.title {\n  margin: 1rem 1rem;\n  font-size: 0.88rem;\n  font-weight: bold;\n  color: white;\n}\n\n#wrapper-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 8.33rem);\n    justify-content: center;\n    margin-left: max(-1rem, calc(40% - 20rem));\n    margin-right: max(-1rem, calc(40% - 20rem));\n}\n\n.small-text {\n  font-size: 0.8rem;\n}\n\n.pagination {\n  display: flex;\n  margin: auto;\n  justify-content: center;\n}\n\n.pagination a {\n  color: white;\n  background-color: #333333;\n  padding: 8px 10px;\n  margin-left: 4px;\n  border-radius: 6px;\n  margin: 0 4px 0px;\n}\n\n.pagination a.active {\n  background-color: #f48f51;\n  color: white;\n}\n\n.pagination a:hover:not(.active) {\n  background-color: #ddd;\n}\n</style>","<svelte:head>\n    <link rel=\"stylesheet\" href=\"https://cdn.fluidplayer.com/v2/current/fluidplayer.min.css\" type=\"text/css\" />\n    <script bind:this={script} src=\"https://cdn.fluidplayer.com/v2/current/fluidplayer.min.js\"></script>\n    <style>\n        #video{width:100%;height: auto;object-fit:scale-down;}\n    </style>\n</svelte:head>\n\n<main>\n    <!-- svelte-ignore a11y-media-has-caption -->\n    <video id=\"video\" {poster} controls=\"\">\n    {#if sources != undefined && sources instanceof Array}\n        {#each sources as source}\n            {#if source.label == '480p'}\n                <source src={sources['480p']} title='480p' type='video/mp4' />\n            {/if}\n            {#if source.label == '720p'}\n                <source data-fluid-hd src={sources['720p']} title='720p' type='video/mp4' />\n            {/if}\n            {#if source.label == '1080p'}\n                <source data-fluid-hd src={sources['1080p']} title='1080p' type='video/mp4' />\n            {/if}\n        {/each}\n    {/if}\n    \n    {#if sources['360p'] != undefined && sources['360p'] != ''}\n        <source src={sources['360p']} title='360p' type='video/mp4' />\n    {/if}\n    {#if sources['480p'] != undefined && sources['480p'] != ''}\n        <source src={sources['480p']} title='360p' type='video/mp4' />\n    {/if}\n    {#if sources['720p'] != undefined && sources['720p'] != ''}\n        <source data-fluid-hd src={sources['720p']} title='720p' type='video/mp4' />\n    {/if}\n    {#if sources['1080p'] != undefined && sources['1080p'] != ''}\n        <source data-fluid-hd src={sources['1080p']} title='1080p' type='video/mp4' />\n    {/if}\n    </video>\n</main>\n\n<script>\n    export let sources;\n    export let poster;\n\n    import { onMount, createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n    let script;\n\n    onMount(async () => {\n        script.addEventListener('load', () => {\n            dispatch('loaded');\n            fluidPlayer(\"video\", {\n                layoutControls: {\n                    preload: true,\n                    allowDownload: true,\n                    primaryColor: \"#f48f51\",\n                    controlBar: { autoHide: true, autoHideTimeout: 5, animated: true }\n                },\n            });\n        });\n\n        script.addEventListener('error', (event) => {\n            console.error(\"something went wrong\", event);\n            dispatch('error');\n        });\n    });\n</script>","<svelte:head>\n    <style>\n        #movieplay {\n            width: 100%;\n            height: 100%;\n        }\n        #source {\n            height: 40vmax;\n            width: 100%;\n        }\n    </style>\n</svelte:head>\n\n<script>\n    export let code;\n    let offsetWidth;\n    const dynamicHeight = () => {\n        if (offsetWidth > 0) {\n            offsetWidth = document.getElementById('source').offsetWidth;\n        }\n        return offsetWidth/2;\n    };\n</script>\n<main>\n    <!-- svelte-ignore a11y-missing-attribute -->\n    <iframe bind:offsetWidth={offsetWidth} id=\"source\" height=\"{offsetWidth/2}\" src=\"https://smartshare.tv/v/{code}\" frameborder=\"0\" allowfullscreen />\n</main>","<svelte:head>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@vime/core@^5/themes/default.css\"/>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@vime/core@^5/themes/light.css\"/>\n</svelte:head>\n\n<script>\n    import Header from \"../widgets/Header.svelte\";\n    import Footer from \"../widgets/Footer.svelte\";\n    import FluidPlayer from \"../widgets/FluidPlayer.svelte\";\n    import SmartPlayer from \"../widgets/SmartPlayer.svelte\"\n\n    export let id;\n\n    const baseUrl = 'http://103.82.21.73:80';\n    let video;\n    const isUav = ('ce546aedbd70c4d6ca'.length == id.length);\n    const request = new XMLHttpRequest();\n    let params;\n    if (isUav) {\n        params = `/uav/code/${id}`;\n    } else {\n        params = `/jav/code/${id}`;\n    }\n    request.onload = () => {\n        video = JSON.parse(request.response);\n    };\n    request.open('GET', `${baseUrl}/api${params}`, true);\n    request.setRequestHeader('Content-type', 'application/json');\n    request.send();\n</script>\n\n<main>\n    <Header {isUav}/>\n    <div id=\"content\">\n        {#if video == undefined }\n            <h1> Oops ! No content here </h1>\n        {:else}\n            {#if isUav}\n                <FluidPlayer sources={video.files} poster={video.image_link}/>\n            {:else}\n                <SmartPlayer code={id}/>\n            {/if}\n\n            <div id=\"info\">\n                <img id=\"actorImage\" src={video.icon_link} alt={video.actor}\n                    style={isUav ? \"height: 6rem;\" : \"height: 12rem;\"}\n                >\n                <div id=\"text\">\n                    <p>{video.title}</p>\n                    {#if video.actor != undefined}\n                        <a href=\"/jav/page/1/?search={video.actor}\">\n                            <p id=\"actorName\" style={video.actor != '' ? \"background-color: #5cc2f7;\" : \"\"}>{video.actor}</p>\n                        </a>\n                    {/if}\n                </div>\n            </div>\n        {/if}\n        \n    </div>\n    <Footer/>\n</main>\n    \n<style>\n    h1 {\n        margin-left: 2rem;\n    }\n\n    #content {\n        margin: auto;\n        max-width: 60rem;\n        max-height: 60rem;\n    }\n\n    #info {\n        color: #dddddd;\n        margin-top: 1rem;\n        display: flex;\n    }\n\n    #text {\n        margin-top: -16px;\n        display: block;\n        float: top;\n    }\n\n    p {\n        height: max-content;\n    }\n\n    #actorImage {\n        margin-right: 1rem;\n    }\n\n    a {\n        text-decoration: none;\n    }\n\n    #actorName {\n        width: max-content;\n        padding: 4px 8px 4px 8px;\n        color: white;\n        border-radius: 2px;\n        font-size: 14px;\n    }\n</style>","<script>\n\timport { Router, Route } from \"svelte-routing\";\n\timport HomePage from './pages/HomePage.svelte';\n\timport VideoPlayerPage from \"./pages/VideoPlayerPage.svelte\";\n</script>\n\n<Router>\n\t<Route path=\"/jav/page/:id\" component=\"{HomePage}\"/>\n\t<Route path=\"/uav/page/:id\" component=\"{HomePage}\"/>\n\t<Route path=\"/uav\" component=\"{HomePage}\"/>\n\t<Route path=\"/jav\" component=\"{HomePage}\"/>\n\t<Route path=\"/\" component=\"{HomePage}\"/>\n\t<Route path='/play/:id' component=\"{VideoPlayerPage}\"/>\n</Router>\n\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","crossorigin","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","removeProperty","setProperty","is_crossorigin","window","parent","error","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","call","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","globalThis","global","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","LOCATION","ROUTER","getLocation","source","location","state","history","globalHistory","listeners","listener","popstateListener","action","navigate","to","replace","Date","now","replaceState","pushState","createHistory","Boolean","initialPathname","stack","pathname","search","states","entries","_","uri","split","createMemorySource","paramRe","isSplat","segment","segmentize","stripSlashes","str","rankRoute","route","score","default","path","reduce","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","match","default_","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","routeSegments","routeSegment","uriSegment","decodeURIComponent","join","dynamicMatch","exec","combinePaths","basepath","locationContext","routerContext","activeRoute","hasActiveRoute","base","routerBase","registerRoute","$base","_path","matchingRoute","$location","rs","unregisterRoute","bestMatch","$routes","levels","updates","to_null_out","accounted_for","n","routeParams","routeProps","$activeRoute","link","onClick","currentTarget","host","hostMatches","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","hasAttribute","destroy","isUav","includes","actor","title","icon_link","code","action_result","baseUrl","id","urlParams","URLSearchParams","paramsByPage","page","videos","maxPage","request","XMLHttpRequest","currentPage","startPage","pages","onload","response","JSON","parse","max_page","min","open","setRequestHeader","send","label","sources","poster","dispatch","script","fluidPlayer","layoutControls","preload","allowDownload","primaryColor","controlBar","autoHide","autoHideTimeout","animated","console","getComputedStyle","position","iframe","tabIndex","contentWindow","offsetWidth","files","image_link","video","HomePage","VideoPlayerPage","body"],"mappings":"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"}